# ロード完了後、GoogleMaps生成とマーカー配置
class @MyMaps
  constructor: (@params) ->
    @canvasId       = @params.canvasId
    @lat            = @params.lat
    @lng            = @params.lng
    @level          = @params.level || 12
    @range          = @params.range || 0.01
    @form           = @params.form  || {}
    @map            = {}
    @centerImageUrl = @params.centerImageUrl || 'http://www.google.com/mapfiles/gadget/arrowSmall80.png'
    @normalImage    = new google.maps.MarkerImage 'http://maps.google.co.jp/mapfiles/ms/icons/red-dot.png'
    @forcusedImage  = new google.maps.MarkerImage 'http://maps.google.co.jp/mapfiles/ms/icons/green-dot.png'
    @markers        = {}

  getBounds: ->
    @map.getBounds()

  # 住所から緯度経度を取得 成功したらcenterを設定
  updateCenterByAddress: (address) ->
    _this = @
    geocoder = new google.maps.Geocoder()
    geocoder.geocode { address: address }, (results, status) ->
      unless status == google.maps.GeocoderStatus.OK
        return
      result = results[0]
      _this.map.setCenter(result.geometry.location)
      $(_this.form.address).val(result.formatted_address)

  # 移動時、中央のマーカーを再配置
  reloadCenter: () ->
    _this = @
    google.maps.event.addListener @map, 'center_changed', ->
      _this.removeCenterMarker()
      _this.addCenterMarker()

  # 一点の位置の周辺情報を取得
  fetchPointsAround:() ->
    @fetchPoints({
      sw_lat: @lat - @range,
      ne_lat: @lat + @range,
      sw_lng: @lng - @range,
      ne_lng: @lng + @range,
    })

  # 指定した範囲の緯度経度からpoint情報取得を試みる
  fetchPoints:(latlng) ->
    _this = @
    $.ajax({
      type:     "GET",
      dataType: "json",
      url:      "/api/points",
      data:     latlng,
      success: (data, status, jqXHR) ->
        _this.clearLocalPointsInfo()
        _this.removeMarkers()
        for point, num in data
          _this.markers[point.id] = _this.addMarker({
            id:          point.id,
            title:       point.point_name,
            point_name:  point.point_name,
            address:     point.address,
            description: point.description,
            site_url:    point.site_url,
            lat:         point.latitude,
            lng:         point.longitude,
            icon:        _this.normalImage
            showInfo:    1,
          })
        _this.showLocalPointsInfo(data)
    })

  removeMarkers: ->
    for id, m of @markers
      m.setMap(null)
    @markers = {}

  # 指定したidのdivにGoogleMapsを生成
  createGmap:() ->
    latlng = new google.maps.LatLng(@lat,@lng)
    opts   = {
      zoom:      @level,
      center:    latlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    }
    window.gmap = new google.maps.Map($(@canvasId)[0], opts)
    @map = window.gmap

  removeCenterMarker:() ->
    @centerMarker.setMap(null)

  # mapの中央にマーカーを配置
  addCenterMarker:() ->
    center    = window.gmap.getCenter()
    imageUrl  = @centerImageUrl
    image     = new google.maps.MarkerImage imageUrl
    marker = @addMarker({
      lat:   center.lat(),
      lng:   center.lng(),
      title: 'center',
      icon:  image,
    })
    $(@form.latf).attr("value", center.lat()) if @form.latf
    $(@form.lngf).attr("value", center.lng()) if @form.lngf
    @centerMarker = marker

  # GoogleMapsにマーカーを配置
  addMarker:(opt) ->
    latlng = new google.maps.LatLng(opt.lat, opt.lng)
    marker = new google.maps.Marker({
      position: latlng,
      title:    opt.title,
      icon:     opt.icon,
    })
    marker.setMap(@map)

    if opt.showInfo
      info = new google.maps.InfoWindow({
        content: "<p>" + opt.point_name + "<br />" + opt.address + "</p>"
      })
      google.maps.event.addListener marker, 'click', ->
        info.open(@map, marker)
    return marker

  # 右側スペースを一旦クリア
  clearLocalPointsInfo: ->
    $("#spot_info div").remove()

  # 右側スペースにpointの情報を表示
  showLocalPointsInfo:(data, opt={}) ->
    _this = @
    for point, num in data
      link = $('<a>')
      link.attr "href", "/local_points/" + point.id
      link.append point.point_name

      div = $('<div>', {
        id:    @getInfoId(point.id),
        class: "well well-small"
      })
      div.append link
      div.append "<br>"
      div.append point.address
      $("#spot_info").append div

      if marker = @markers[point.id]
        div.mouseover { point: point, marker: marker }, (e)->
          e.data.marker.setIcon _this.forcusedImage
        div.mouseout  { point: point, marker: marker }, (e)->
          e.data.marker.setIcon _this.normalImage

  getInfoId: (id) ->
    "_local_spot_info_" + id
